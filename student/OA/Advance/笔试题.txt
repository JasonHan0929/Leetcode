=== 字典序列化 ===

我们程序中用到了一个数组 a ，数组的每个元素都是一个字典（map/dict）。
字典的 key/value 都是字符串，字符串中可包含任意字符。

示例:

    a[0]["k1"] = "v1"
    a[0]["k2"] = "v2"
    a[1]["A"] = "XXX"
    ...

实际使用过程中，我们自定义了一个基于字符串的存储结构，数组元素之间用“换行”分割，
字典元素之间使用“分号”分割， key/value 之间用“等号”分割。
上述数据序列化之后，应该得到一个字符串：

    "k1=v1;k2=v2\nA=XXX"

请实现一个“保存”函数、一个“加载”函数。

    text = store(a); //把数组保存到一个字符串中
    a = load(text);  //把字符串中的内容读取为字典数组

请考虑所有边界情况，不要出现bug。在满足上述需求的前提下，可自行增加一些规则和约定。


=== 路径规划 ===

我们有一个有向无环图，权重在节点上。

需求：从一个起点开始，找到一条节点权重之和最大的最优路径。

输入: n个节点，m个路径，起点

输出: 最优路径的权重值之和

举例:

    3个节点与权重: A=1, B=2, C=2
    3条路径: A->B, B->C, A->C
    起点: A
    输出: 5 (最优路径是 A->B->C ， 权重之和是 1+2+2=5)

请考虑算法效率优化，考虑异常情况（比如输入的图有环路）要避免死循环或者崩溃。
